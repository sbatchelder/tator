worker_processes 1;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  server_names_hash_bucket_size 128;
  proxy_ignore_client_abort on;
  client_max_body_size 0;
  server {
    listen 127.0.0.1:80;
    location /status {
      stub_status;
      access_log off;
      allow 127.0.0.1;
      deny all;
    }
  }
        
  
  server {
    listen 80;
  
    server_name jon.tator.dev;
    
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
  
    location ~*phpinfo.php {
      return 404;
    }
    location ~*index.php {
      return 404;
    }
    location ~*elrekt.php {
      return 404;
    }
    location ~*config.php {
      return 404;
    }
    location ~*wp-login.php {
      return 404;
    }
    location ~*phpmyadmin {
      return 404;
    }
    location ~*recordings/theme/main.css {
      return 404;
    }
    location ~*HNAP1 {
      return 404;
    }
    location /favicon.ico {
      alias /static/images/favicon.ico;
      add_header Cache-Control "max-age=3600, must-revalidate";
    }
    location /static {
      alias /static/;
      autoindex off;
      add_header Cache-Control "max-age=0, must-revalidate";
      add_header Cross-Origin-Opener-Policy same-origin;
      add_header Cross-Origin-Embedder-Policy require-corp;
          
      
    }
    location /docs {
      return 301 https://tator.io/docs;
    }
    location /media {
      alias /media/;
      autoindex off;
      add_header Cache-Control "max-age=3600, must-revalidate";
      add_header 'Access-Control-Allow-Headers' 'Authorization,X-CSRFToken' always;
      add_header Cross-Origin-Opener-Policy same-origin;
      add_header Cross-Origin-Embedder-Policy require-corp;
          
      
      auth_request /auth-project;
    }
    location /media/working
    {
      return 403;
    }
    location /auth-project {
      internal;
      # Allow for long responses.
      proxy_connect_timeout 1200;
      proxy_send_timeout 1200;
      proxy_read_timeout 1200;
      send_timeout 1200;
  
      proxy_pass http://gunicorn-svc:8000/auth-project;
      proxy_pass_request_body off;
      proxy_set_header Host $host;
      proxy_set_header Content-Length "";
      proxy_set_header X-Original-URI $request_uri;
      proxy_pass_header Authorization;
  
      proxy_http_version 1.1;
    }
    location /objects/ {
      proxy_pass http://tator-minio:9000/;
          
      
    }
    location /minio {
      auth_request /auth-admin;
      proxy_pass http://tator-minio:9000;
      proxy_redirect off;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header Connection "Keep-Alive";
      proxy_set_header Proxy-Connection "Keep-Alive";
    }
    location /argo/ {
      auth_request /auth-admin;
      proxy_pass http://argo-server.argo.svc.cluster.local:2746/;
      proxy_redirect off;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header Connection "Keep-Alive";
      proxy_set_header Proxy-Connection "Keep-Alive";
    }
    location /logs/ {
      auth_request /auth-admin;
      proxy_pass http://tator-kibana:5601/;
      proxy_redirect off;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header Connection "Keep-Alive";
      proxy_set_header Proxy-Connection "Keep-Alive";
    }
    location /auth-admin {
      internal;
      proxy_pass http://gunicorn-svc:8000/auth-admin;
      proxy_pass_request_body off;
      proxy_set_header Host $host;
      proxy_set_header Content-Length "";
      proxy_set_header X-Original-URI $request_uri;
      proxy_pass_header Authorization;
    }
    location /grafana/ {
      auth_request /auth-admin;
      proxy_pass http://tator-grafana/;
      proxy_set_header Host $host;
    }
  
    location /prometheus/ {
      auth_request /auth-admin;
      proxy_pass http://tator-kube-prometheus-stac-prometheus:9090/;
      proxy_set_header Host $host;
      sub_filter_types text/html;
      sub_filter_once off;
      sub_filter '="/' '="/prometheus/';
      sub_filter 'var PATH_PREFIX = "";' 'var PATH_PREFIX = "/prometheus";';
      rewrite ^/prometheus/?$ /prometheus/graph redirect;
      rewrite ^/prometheus/(.*)$ /$1 break;
    }
  
    location /graphql {
      alias /graphql/;
  
      # Allow for big REST responses.
      proxy_connect_timeout 1200;
      proxy_send_timeout 1200;
      proxy_read_timeout 1200;
      send_timeout 1200;
      add_header Cross-Origin-Opener-Policy same-origin;
      add_header Cross-Origin-Embedder-Policy require-corp;
      proxy_pass http://graphql-svc:3000;
  
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      add_header Cache-Control "max-age=0, must-revalidate";
          
      
  
      gzip on;
      gzip_types application/json;
      gzip_min_length 1024;
    }
  
  	location ~ ^/$|^/rest$|^/(projects|token|organizations)|^/\d+/ {
      add_header Cross-Origin-Opener-Policy same-origin;
      add_header Cross-Origin-Embedder-Policy require-corp;
      proxy_pass http://ui-svc:3000;
  
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      add_header Cache-Control "max-age=0, must-revalidate";
          
      
  
      gzip on;
      gzip_types application/json;
      gzip_min_length 1024;
    }
  
    location / {
      # Allow for big REST responses.
      proxy_connect_timeout 1200;
      proxy_send_timeout 1200;
      proxy_read_timeout 1200;
      send_timeout 1200;
      add_header Cross-Origin-Opener-Policy same-origin;
      add_header Cross-Origin-Embedder-Policy require-corp;
      proxy_pass http://gunicorn-svc:8000;
  
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      add_header Cache-Control "max-age=0, must-revalidate";
          
      
  
      gzip on;
      gzip_types application/json;
      gzip_min_length 1024;
    }
  
    error_page 503 /static/maintenance.html;
    # Allow POST on static pages
    error_page 405 =200 $uri;
  }
  
}
